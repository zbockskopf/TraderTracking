import SwiftUIclass MenuController: NSObject, ObservableObject{        static var shared = MenuController()    	@Published var showDeleteAlert: Bool = false    @Published var showDeletedTradesAlert: Bool = false    @Published var showArchiveAlert: Bool = false    @Published var showWeeklyGoalAlert: Bool = false	@Published var showForexCalendar: Bool = false    @Published var showNotificationSettings: Bool = false    @Published var showModelSettigs: Bool = false    @Published var showAccout: Bool = false    @Published var showProfile: Bool = false	@Published var showSettings: Bool = false    @Published var showTradeView: Bool = false    @Published var showListView: Bool = false    @Published var showDailyReview: Bool = false    @Published var showCalendarView: Bool = false    @Published var showJournalResetAlert: Bool = false        @Published var selection = 0        var selectionHandler: Binding<Int> { Binding(            get: { self.selection },            set: { [self] in                if $0 == self.selection {                    if self.selection == 0{                        closeAll()                    }                }                self.selection = $0            }        )}            @Published var newsDoesScrollToToday: Bool = UserDefaults.standard.bool(forKey: "newsDoesScrollToToday") {        didSet{            UserDefaults.standard.set(self.newsDoesScrollToToday, forKey: "newsDoesScrollToToday")        }    }        // MARK:- Display    @Published var showAllTrades: Bool = UserDefaults.standard.bool(forKey: "showAllTrades") {        didSet{            UserDefaults.standard.set(self.showAllTrades, forKey: "showAllTrades")        }    }    @Published var showWeekTrades: Bool = UserDefaults.standard.bool(forKey: "showWeekTrades") {        didSet{            UserDefaults.standard.set(self.showWeekTrades, forKey: "showWeekTrades")        }    }        // MARK:- Filter    @Published var showAllTradesFilter: Bool = UserDefaults.standard.bool(forKey: "showAllTradesFilter") {        didSet{            UserDefaults.standard.set(self.showAllTradesFilter, forKey: "showAllTradesFilter")        }    }    @Published var showActualTrades: Bool = UserDefaults.standard.bool(forKey: "showActualTrades") {        didSet{            UserDefaults.standard.set(self.showActualTrades, forKey: "showActualTrades")        }    }        @Published var showHindsightTrades: Bool = UserDefaults.standard.bool(forKey: "showHindsightTrades") {        didSet{            UserDefaults.standard.set(self.showHindsightTrades, forKey: "showHindsightTrades")        }    }        // MARK:- P/L    @Published var showHindsightPL: Bool = UserDefaults.standard.bool(forKey: "showHindsightPL") {        didSet{            UserDefaults.standard.set(self.showAllTrades, forKey: "showHindsightPL")        }    }    @Published var showActualPL: Bool = UserDefaults.standard.bool(forKey: "showActualPL") {        didSet{            UserDefaults.standard.set(self.showWeekTrades, forKey: "showActualPL")        }    }        @Published var defaultTab: Int = UserDefaults.standard.integer(forKey: "defaultTab") {        didSet{            UserDefaults.standard.set(self.defaultTab, forKey: "defaultTab")        }    }        @Published var currentTradeButtonFunction: String = UserDefaults.standard.string(forKey: "currentTradeButtonFunction")!{        didSet {            UserDefaults.standard.set(self.currentTradeButtonFunction, forKey: "currentTradeButtonFunction")        }    }        func closeAll() {        showDeleteAlert = false        showArchiveAlert = false        showWeeklyGoalAlert = false        showForexCalendar = false        showNotificationSettings = false        showAccout = false        showProfile = false        showSettings = false        showTradeView = false    }        func changeTab() {        closeAll()        selection = 2    }}